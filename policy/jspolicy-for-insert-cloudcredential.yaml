apiVersion: policy.jspolicy.com/v1beta1
kind: JsPolicy
metadata:
  name: "insert.cloudcredential.policy"
spec:
  type: Mutating
  operations: ["CREATE", "UPDATE"]
  resources: ["clusters"]
  apiGroups: ["provisioning.cattle.io"]
  objectSelector:               
    matchLabels:
      app.kubernetes.io/managed-by: Helm
  javascript: |
    const secretName = request.object.spec.cloudCredentialSecretName;
    const secretObject = get("Secret", "v1", secretName.replace(':', '/'));
    let cngValue = request.object.spec.rkeConfig.additionalManifest;
    let key_name = "";
    Object.keys(secretObject.data).forEach(function(key, index) {
      key_name = key.split('-').slice(1).join('-'); // remove first string before '-'
      key_name = key_name.replaceAll('-', '_').toUpperCase(); // replace all '-' to '_' and uppercase
      // simple encode base64 data
      atobData = atob(secretObject.data[key]);
      // rewrite encode base64 data without last info
      let regex = new RegExp('(REPLACE_CLOUD_CREDENTIAL_ATOB_' + key_name + ')\\|([0-9]{0,12})', 'gm');
      cngValue.match(regex).forEach(function(elem) {
      	let foundData = elem.split('|');
        let strRemove = atobData.substring(0, atobData.length - foundData[1]);
        cngValue = cngValue.replaceAll(foundData[0] + '|' + foundData[1], strRemove);
      });
      // rewrite encode base64 data
      cngValue = cngValue.replaceAll('REPLACE_CLOUD_CREDENTIAL_ATOB_' + key_name, atobData);
      // rewrite base64 data
      cngValue = cngValue.replaceAll('REPLACE_CLOUD_CREDENTIAL_' + key_name, secretObject.data[key]);
    });
    request.object.spec.rkeConfig.additionalManifest = cngValue;
    mutate(request.object);
